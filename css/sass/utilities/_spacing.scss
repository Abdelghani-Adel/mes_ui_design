@mixin generate($prefix, $property) {
  // List of sizes to generate for each
  $sizes: (0, 0.25, 0.5, 1, 1.5, 3);
  // Spacing to multiply the sizes by
  $spacing: 1rem;

  // Loop through all of the sizes(we use @for rather than @each, as we want access to the index)
  @for $i from 1 through length($sizes) {
    // Get the size for the current index
    $size: nth($sizes, $i);

    // Create the rule
    .#{$prefix}-#{$i - 1} {
      #{$property}: $spacing * $size;
    }
  }
}

@include generate(m, margin);
@include generate(mt, margin-top);
@include generate(mr, margin-right);
@include generate(mb, margin-bottom);
@include generate(ml, margin-left);

@include generate(p, padding);
@include generate(pt, padding-top);
@include generate(pr, padding-right);
@include generate(pb, padding-bottom);
@include generate(pl, padding-left);

.h-100 {
  height: 100%;
}
.h-75 {
  height: 75%;
}
.h-50 {
  height: 50%;
}
.h-25 {
  height: 25%;
}
.h-100vh {
  height: 100vh;
}
.h-75vh {
  height: 75vh;
}
.h-50vh {
  height: 50vh;
}
.h-25vh {
  height: 25vh;
}
.w-100 {
  width: 100%;
}
.w-75 {
  width: 75%;
}
.w-50 {
  width: 50%;
}
.w-25 {
  width: 25%;
}
.w-100vh {
  width: 100vh;
}
.w-75vh {
  width: 75vh;
}
.w-50vh {
  width: 50vh;
}
.w-25vh {
  width: 25vh;
}
